@model MailPusher.Models.Email
@{
    ViewBag.Title = "Unconfirmed publisher";
}

<input type="hidden" id="publisherId" />
@Html.Partial("Custom/SingleEmail")
<div class="form-group unconfirmedBtns">
    <div class="col-md-9">
        <button class="btn btn-success" onclick="ChangePublisherStatus('@MailPusher.Common.Enums.PublisherStatus.Confirmed')">
            I have now confirmed the publisher's newsletter
        </button>
    </div>
    <div class="col-md-3">
        <button class="btn btn-danger" onclick="ChangePublisherStatus('@MailPusher.Common.Enums.PublisherStatus.Error_ConfirmNotFound')">
            I couldn't find where to confirm
        </button>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            updateEmailData(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)));
        });

        function updateEmailData(data){
            var badResult = data.PublisherID=="0";
            if(badResult)
            {
                ChangeEmailDataVisibility(false);
                var errorMsg = 'No subscriptions in State - @MailPusher.Common.Enums.PublisherStatus.Subscribed.';
                errorMsg+= !isSpecificPublisherState()?'Try different country':'';
                notifyWrapper.error(errorMsg);
            }
            else{
                ChangeEmailDataVisibility(true);
            }

            $("#publisherId").val(data.PublisherID);
            singleEmailHelper.init(singleEmailHelper.map(data),
                '@Url.Action("GetEmailBody", "Email")');
        }

        function ChangePublisherStatus(newStatus) {
            $.post('@Url.Action("ChangePublisherStatus", "Publisher")', { "status": newStatus, "id":  $("#publisherId").val() }).done(function (result) {
                if(result===true)
                {
                    notifyWrapper.success('Successfully changed publisher state to ' + newStatus);
                    if(!isSpecificPublisherState()){
                        ChangeEmailDataVisibility(false);
                        injectedCountryFilter.countryChanged();
                    };
                }
            });
        }

        function ChangeEmailDataVisibility(isVisible)
        {
            if(isVisible)
            {
                singleEmailHelper.showData();
                $(".unconfirmedBtns").show();
            }
            else{
                singleEmailHelper.hideData();
                $(".unconfirmedBtns").hide();
            };
        }

        $(document).ready(function(){
            if(!isSpecificPublisherState()) {
                injectedCountryFilter.init({
                    countryFilterContainerID: singleEmailHelper.singleEmailFilterContainerId,
                    selectedCountryCode:'@Model.Language',
                    onCountryChanged: function (countryCode) {
                        var requestData = {
                            'countryCode': countryCode,
                            'status':@((int)MailPusher.Common.Enums.PublisherStatus.Subscribed),
                            'publisherId': $("#publisherId").val(),
                        };
                        if (!!requestData) {
                            $.get('@Url.Action("GetFirstPublisherEmail", "Email")', requestData).done(function (data) {
                                updateEmailData(data);
                            });
                        }
                    },
                });
            };
            singleEmailHelper.hideButtons();
        });

        function isSpecificPublisherState()
        {
            return !!getUrlParameter("publisherId");
        }
    </script>
    }