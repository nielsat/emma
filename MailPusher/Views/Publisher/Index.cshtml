
@{
    ViewBag.Title = "Publishers";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Publishers
                    <small>
                        <a href='@Url.Action("Create","Publisher")'><i class="fa fa-plus"></i>&nbsp; Create new </a>
                    </small>
                </h2> 
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div id="datatable-checkbox_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">
                    <div class="row">
                        <div class="col-sm-12" style="min-height:400px" id="myTableContainer">
                            <table id="myTable" class="table table-striped table-bordered dataTable no-footer table-hover">
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#myTable').dataTable({
                serverSide: true,
                ajax: {url:'@Url.Action("Get", "Publisher")',
                    data:function ( d ) {
                        d.publisherStatuses = GetPublisherCombinedStatus();
                        d.isPotentiallyCancelled = IsPotentiallyCancelled();
                    }},
                columns: [
                    {
                        name: 'id',
                        data: "id",
                        title: "ID",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'name',
                        data: 'name',
                        title: "Publisher",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'state',
                        data: "state",
                        title: "State",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'category',
                        data: "category",
                        title: "Category",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'language',
                        data: "language",
                        title: "Country",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'lastReceivedEmail',
                        data: "lastReceivedEmail",
                        title: "Last received",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'receivedEmails',
                        data: "receivedEmails",
                        title: "Emails",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'btns',
                        data: null,
                        title: '',
                        sortable: false,
                        searchable: false,
                        defaultContent: "<div class='btnTD'></div><a class='editBtn' href='#'><i class='fa fa-pencil'></i> Edit</a> &nbsp;&nbsp;&nbsp; <a class='subscribeBtn hidden' href='#'><i class='fa fa-envelope-o'></i> Subscribe to newsletter</a> <a class='confirmSubscribtionBtn hidden' href='#'><i class='fa fa-envelope-o'></i> Confirm subscription</a>",
                    }
                ],
                "iDisplayLength": 100,
                "bLengthChange": false,
                "oLanguage": {
                    "sSearch": "Search publishers by name: "
                }
            });
            var triggerDrawUpdate = true;
            $('#myTable').on('draw.dt', function (source) {
                if(triggerDrawUpdate)
                {
                    changeCountryNames();
                    addCustomFilters();
                    showButtonsBasedOnState();
                    initButtons();
                    changeGridStyle();
                    triggerDrawUpdate = true;
                }
            });

            function changeCountryNames(){
                var table = $('#myTable').DataTable();
                $.each($("#myTable tr"),function(index,tbRow){
                    var rowData = table.row(tbRow).data();
                    if(!!rowData && !!rowData.language)
                    {
                        rowData.language = countryHelper.getCountryByCode(rowData.language);
                        if(rowData.language!=''){
                            triggerDrawUpdate=false;
                            table.row(tbRow).data(rowData).draw();
                        }
                    };
                });
            }

            function changeGridStyle()
            {
                if($(".subscribeBtn.hidden").length!=$(".subscribeBtn").length
                    ||$(".confirmSubscribtionBtn.hidden").length!=$(".confirmSubscribtionBtn").length){
                    $(".btnTD").parents('td').css("width","250px");
                }
                gridHelper.updateContainerHeight('myTableContainer','myTable',200);
                gridHelper.changeTdCursorToPointer('myTable','btnTD');
            }

            function showButtonsBasedOnState()
            {
                var table = $('#myTable').DataTable();
                var needDrow= false;
                $.each($("#myTable tr"),function(index,tbRow){
                    var rowData = table.row(tbRow).data();
                    if(!!rowData && rowData.state=='@MailPusher.Common.Enums.PublisherStatus.None'){
                        triggerDrawUpdate=false;
                        rowData.state = "<i class='fa fa-exclamation' style='color:red;'></i>&nbsp; &nbsp;" + rowData.state;
                        table.row(tbRow).data(rowData).draw();
                        $(tbRow).find(".subscribeBtn").removeClass("hidden");
                    }
                    if(!!rowData && rowData.state=='@MailPusher.Common.Enums.PublisherStatus.Subscribed'){
                        $(tbRow).find(".confirmSubscribtionBtn").removeClass("hidden");
                    }
                });
            }

            function initButtons() {
                var table = $('#myTable').DataTable();

                $("#myTable td").click(function(){
                    if(!$(this).find("div.btnTD").length)
                    {
                        var table = $('#myTable').DataTable();
                        window.location.href = '@Url.Action("Details", "Publisher")' + '?publisherId=' + table.row($(this).parents('tr')).data().id;
                    };
                });

                $(".subscribeBtn").click(function () {
                    var table = $('#myTable').DataTable();
                    window.location.href = '@Url.Action("Index", "Subscription")' + '?publisherId=' + table.row($(this).parents('tr')).data().id;
                });

                $(".confirmSubscribtionBtn").click(function () {
                    var table = $('#myTable').DataTable();
                    window.location.href = '@Url.Action("Unconfirmed", "Publisher")' + '?publisherId=' + table.row($(this).parents('tr')).data().id;
                });

                $(".editBtn").click(function () {
                    var table = $('#myTable').DataTable();
                    window.location.href = '@Url.Action("Edit", "Publisher")' + '?publisherId=' + table.row($(this).parents('tr')).data().id;
                });
            }

            function GetPublisherCombinedStatus(){
                var combinedStatus = 0;
                if(!$('#publisherStatus').length)
                {
                    var urlParameter = GetURLParamPublisherStatuses();
                    if(!!urlParameter)
                    {
                        combinedStatus = urlParameter;
                    }
                    return combinedStatus;
                }
                $.each($('#publisherStatus option:selected'),function(index,value){
                    combinedStatus |=value.value;
                });
                return combinedStatus;
            }

            function addCustomFilters()
            {
                if(!!$("#customTableFilter").length)
                {
                    return;
                };
                var select = '<label id="customTableFilter"> Filter publishers on state: <select id="publisherStatus" multiple="multiple">';
                var selectedStatuses = getUrlParameter('publisherStatuses');
                $.each(@Html.Raw(ViewBag.StatusList), function( index, value ) {
                    var selected = '';
                    if(!!selectedStatuses && ((selectedStatuses&value.Item2)>0))
                    {
                        selected="selected='selected'";
                    }
                    select+="<option value='"+value.Item2+"' " + selected + ">"+value.Item1 +"</option>";
                });
                select +="</select></label> &nbsp; &nbsp; &nbsp;";
                $("#myTable_filter").prepend(select);
                $('#publisherStatus').multiselect();
                $("#publisherStatus").change(function(){
                    $('#myTable').DataTable().draw();
                })
            }
            

            $('div.dataTables_filter input').addClass('form-control');
        });
    </script>
    }
